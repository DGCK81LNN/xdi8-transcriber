name: Build and deploy
on:
  push:
    branches: [ main ]
  workflow_dispatch: { }

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    if: >
      !(
        github.event_name == 'push' &&
        github.run_attempt == 1 &&
        (
          contains(github.event.head_commit.message, '@@__LNN_NO_BUILD__@@') ||
          (
            github.event.head_commit.author.name == 'dependabot[bot]' &&
            contains(github.event.head_commit.message, 'updated-dependencies:')
          )
        )
      )
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: npm
    - name: Restore cache
      uses: actions/cache@v4
      with:
        path: |
          site/.nuxt
        key: ${{ runner.os }}-nuxt-${{ hashFiles('site/.nuxt') }}
        restore-keys: |
          ${{ runner.os }}-nuxt-
    - name: Install dependencies
      run: npm install --workspace=site
    - name: Build
      run: npm run build:site
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: site/dist

  deploy-pages:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

  deploy-ftp:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        environment:
          - vudrux.site
    steps:
      - name: Download built site
        uses: actions/download-artifact@v4
        with:
          name: github-pages
      - name: Extract tar
        run: |
          mkdir _site && tar -xvf artifact.tar -C _site
      - name: Deploy to FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          local-dir: ./_site/
          server: ${{ vars.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: ${{ vars.SERVER_DIR }}
    environment:
      name: ${{ matrix.environment }}
      url: ${{ vars.DEPLOYMENT_URL }}
